// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Router /> matches the snapshot 1`] = `
<RouterContainer>
  <BrowserRouter>
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <App>
        <div>
          <Navbar>
            <nav
              className="navbar navbar-expand-lg navbar-dark bg-dark"
            >
              <Styled(Link)
                className="navbar-brand ml-2"
                to="/"
              >
                <StyledComponent
                  className="navbar-brand ml-2"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bdVaJa",
                        "isStatic": true,
                        "lastClassName": "buxIHh",
                        "rules": Array [
                          "
  font-family: comfortaa, helvetica;
  font-size: 26px !important;
",
                        ],
                      },
                      "displayName": "Styled(Link)",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bdVaJa",
                      "target": [Function],
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  to="/"
                >
                  <Link
                    className="navbar-brand ml-2 sc-bdVaJa buxIHh"
                    to="/"
                  >
                    <a
                      className="navbar-brand ml-2 sc-bdVaJa buxIHh"
                      href="/"
                      onClick={[Function]}
                    >
                      Ben Grunfeld
                    </a>
                  </Link>
                </StyledComponent>
              </Styled(Link)>
              <button
                aria-controls="navbarSupportedContent"
                aria-expanded="false"
                aria-label="Toggle navigation"
                className="navbar-toggler"
                data-target="#navbarSupportedContent"
                data-toggle="collapse"
                type="button"
              >
                <span
                  className="navbar-toggler-icon"
                />
              </button>
              <div
                className="collapse navbar-collapse"
                id="navbarSupportedContent"
              >
                <ul
                  className="navbar-nav mr-auto d-lg-none"
                >
                  <li
                    className="nav-item active"
                  >
                    <a
                      className="nav-link"
                      href="#"
                    >
                      Home 
                      <span
                        className="sr-only"
                      >
                        (current)
                      </span>
                    </a>
                  </li>
                  <li
                    className="nav-item"
                  >
                    <a
                      className="nav-link"
                      href="#"
                    >
                      Link
                    </a>
                  </li>
                  <li
                    className="nav-item dropdown"
                  >
                    <a
                      aria-expanded="false"
                      aria-haspopup="true"
                      className="nav-link dropdown-toggle"
                      data-toggle="dropdown"
                      href="#"
                      id="navbarDropdown"
                      role="button"
                    >
                      Dropdown
                    </a>
                    <div
                      aria-labelledby="navbarDropdown"
                      className="dropdown-menu"
                    >
                      <a
                        className="dropdown-item"
                        href="#"
                      >
                        Action
                      </a>
                      <a
                        className="dropdown-item"
                        href="#"
                      >
                        Another action
                      </a>
                      <div
                        className="dropdown-divider"
                      />
                      <a
                        className="dropdown-item"
                        href="#"
                      >
                        Something else here
                      </a>
                    </div>
                  </li>
                  <li
                    className="nav-item"
                  >
                    <a
                      className="nav-link disabled"
                      href="#"
                    >
                      Disabled
                    </a>
                  </li>
                </ul>
              </div>
            </nav>
          </Navbar>
          <PageLayout>
            <div
              className="container-fluid"
            >
              <div
                className="row"
              >
                <Sidebar>
                  <styled.nav
                    className="col-lg-2 d-none d-lg-block"
                  >
                    <StyledComponent
                      className="col-lg-2 d-none d-lg-block"
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-bwzfXH",
                            "isStatic": true,
                            "lastClassName": "GFIwD",
                            "rules": Array [
                              "
  background: #e3e3e3ff;
  min-height: 100vh;
",
                            ],
                          },
                          "displayName": "styled.nav",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-bwzfXH",
                          "target": "nav",
                          "toString": [Function],
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <nav
                        className="col-lg-2 d-none d-lg-block sc-bwzfXH GFIwD"
                      >
                        <div
                          className="d-flex flex-column"
                        >
                          <div
                            className="ml-3 mt-5"
                          >
                            <Styled(NavLink)
                              exact={true}
                              to="/"
                            >
                              <StyledComponent
                                exact={true}
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": true,
                                      "lastClassName": "hFeOjV",
                                      "rules": Array [
                                        "
  color: black;
  text-decoration: none;
  display: block;
  height: 38px;
  font-family: nunito, helvetica;

  &:hover {
    color: purple;
    text-decoration: none;
    font-size: 20px; 
  }

  &.active {
    font-weight: bold;
    color: black;
    font-size: 20px;
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(NavLink)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                to="/"
                              >
                                <NavLink
                                  className="sc-htpNat hFeOjV"
                                  exact={true}
                                  to="/"
                                >
                                  <Route
                                    exact={true}
                                    path="\\\\/"
                                  >
                                    <Link
                                      aria-current="page"
                                      className="sc-htpNat hFeOjV active"
                                      style={Object {}}
                                      to="/"
                                    >
                                      <a
                                        aria-current="page"
                                        className="sc-htpNat hFeOjV active"
                                        href="/"
                                        onClick={[Function]}
                                        style={Object {}}
                                      >
                                        Home
                                      </a>
                                    </Link>
                                  </Route>
                                </NavLink>
                              </StyledComponent>
                            </Styled(NavLink)>
                            <Styled(NavLink)
                              to="/page/about"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": true,
                                      "lastClassName": "hFeOjV",
                                      "rules": Array [
                                        "
  color: black;
  text-decoration: none;
  display: block;
  height: 38px;
  font-family: nunito, helvetica;

  &:hover {
    color: purple;
    text-decoration: none;
    font-size: 20px; 
  }

  &.active {
    font-weight: bold;
    color: black;
    font-size: 20px;
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(NavLink)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                to="/page/about"
                              >
                                <NavLink
                                  className="sc-htpNat hFeOjV"
                                  to="/page/about"
                                >
                                  <Route
                                    path="\\\\/page\\\\/about"
                                  >
                                    <Link
                                      aria-current={null}
                                      className="sc-htpNat hFeOjV"
                                      to="/page/about"
                                    >
                                      <a
                                        aria-current={null}
                                        className="sc-htpNat hFeOjV"
                                        href="/page/about"
                                        onClick={[Function]}
                                      >
                                        About
                                      </a>
                                    </Link>
                                  </Route>
                                </NavLink>
                              </StyledComponent>
                            </Styled(NavLink)>
                            <Styled(NavLink)
                              to="/page/projects"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": true,
                                      "lastClassName": "hFeOjV",
                                      "rules": Array [
                                        "
  color: black;
  text-decoration: none;
  display: block;
  height: 38px;
  font-family: nunito, helvetica;

  &:hover {
    color: purple;
    text-decoration: none;
    font-size: 20px; 
  }

  &.active {
    font-weight: bold;
    color: black;
    font-size: 20px;
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(NavLink)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                to="/page/projects"
                              >
                                <NavLink
                                  className="sc-htpNat hFeOjV"
                                  to="/page/projects"
                                >
                                  <Route
                                    path="\\\\/page\\\\/projects"
                                  >
                                    <Link
                                      aria-current={null}
                                      className="sc-htpNat hFeOjV"
                                      to="/page/projects"
                                    >
                                      <a
                                        aria-current={null}
                                        className="sc-htpNat hFeOjV"
                                        href="/page/projects"
                                        onClick={[Function]}
                                      >
                                        Projects
                                      </a>
                                    </Link>
                                  </Route>
                                </NavLink>
                              </StyledComponent>
                            </Styled(NavLink)>
                            <Styled(NavLink)
                              to="/post/react"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": true,
                                      "lastClassName": "hFeOjV",
                                      "rules": Array [
                                        "
  color: black;
  text-decoration: none;
  display: block;
  height: 38px;
  font-family: nunito, helvetica;

  &:hover {
    color: purple;
    text-decoration: none;
    font-size: 20px; 
  }

  &.active {
    font-weight: bold;
    color: black;
    font-size: 20px;
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(NavLink)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                to="/post/react"
                              >
                                <NavLink
                                  className="sc-htpNat hFeOjV"
                                  to="/post/react"
                                >
                                  <Route
                                    path="\\\\/post\\\\/react"
                                  >
                                    <Link
                                      aria-current={null}
                                      className="sc-htpNat hFeOjV"
                                      to="/post/react"
                                    >
                                      <a
                                        aria-current={null}
                                        className="sc-htpNat hFeOjV"
                                        href="/post/react"
                                        onClick={[Function]}
                                      >
                                        React
                                      </a>
                                    </Link>
                                  </Route>
                                </NavLink>
                              </StyledComponent>
                            </Styled(NavLink)>
                            <Styled(NavLink)
                              to="/post/redux"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": true,
                                      "lastClassName": "hFeOjV",
                                      "rules": Array [
                                        "
  color: black;
  text-decoration: none;
  display: block;
  height: 38px;
  font-family: nunito, helvetica;

  &:hover {
    color: purple;
    text-decoration: none;
    font-size: 20px; 
  }

  &.active {
    font-weight: bold;
    color: black;
    font-size: 20px;
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(NavLink)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                to="/post/redux"
                              >
                                <NavLink
                                  className="sc-htpNat hFeOjV"
                                  to="/post/redux"
                                >
                                  <Route
                                    path="\\\\/post\\\\/redux"
                                  >
                                    <Link
                                      aria-current={null}
                                      className="sc-htpNat hFeOjV"
                                      to="/post/redux"
                                    >
                                      <a
                                        aria-current={null}
                                        className="sc-htpNat hFeOjV"
                                        href="/post/redux"
                                        onClick={[Function]}
                                      >
                                        Redux
                                      </a>
                                    </Link>
                                  </Route>
                                </NavLink>
                              </StyledComponent>
                            </Styled(NavLink)>
                            <Styled(NavLink)
                              to="/post/immutable"
                            >
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-htpNat",
                                      "isStatic": true,
                                      "lastClassName": "hFeOjV",
                                      "rules": Array [
                                        "
  color: black;
  text-decoration: none;
  display: block;
  height: 38px;
  font-family: nunito, helvetica;

  &:hover {
    color: purple;
    text-decoration: none;
    font-size: 20px; 
  }

  &.active {
    font-weight: bold;
    color: black;
    font-size: 20px;
  }
",
                                      ],
                                    },
                                    "displayName": "Styled(NavLink)",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-htpNat",
                                    "target": [Function],
                                    "toString": [Function],
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                to="/post/immutable"
                              >
                                <NavLink
                                  className="sc-htpNat hFeOjV"
                                  to="/post/immutable"
                                >
                                  <Route
                                    path="\\\\/post\\\\/immutable"
                                  >
                                    <Link
                                      aria-current={null}
                                      className="sc-htpNat hFeOjV"
                                      to="/post/immutable"
                                    >
                                      <a
                                        aria-current={null}
                                        className="sc-htpNat hFeOjV"
                                        href="/post/immutable"
                                        onClick={[Function]}
                                      >
                                        Immutable
                                      </a>
                                    </Link>
                                  </Route>
                                </NavLink>
                              </StyledComponent>
                            </Styled(NavLink)>
                          </div>
                        </div>
                      </nav>
                    </StyledComponent>
                  </styled.nav>
                </Sidebar>
                <Page>
                  <section
                    className="col-11 col-lg-9 offset-lg-1 pt-5 mb-5"
                  >
                    <Switch>
                      <Route
                        component={[Function]}
                        computedMatch={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          }
                        }
                        exact={true}
                        location={
                          Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          }
                        }
                        path="/"
                      >
                        <HomePage
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            }
                          }
                        >
                          <div>
                            <h1>
                              Home Page
                            </h1>
                          </div>
                        </HomePage>
                      </Route>
                    </Switch>
                  </section>
                </Page>
              </div>
            </div>
          </PageLayout>
          <Footer>
            <div
              className="container-fluid"
            >
              <styled.div
                className="row"
              >
                <StyledComponent
                  className="row"
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": true,
                        "lastClassName": "earglH",
                        "rules": Array [
                          "
  background: #101089;
  min-height: 150px;
  color: lightgray;
  padding-top: 20px;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="row sc-bxivhb earglH"
                  >
                    <div
                      className="col-6"
                    >
                      <p>
                        © Ben Grunfeld 2019
                      </p>
                    </div>
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </Footer>
        </div>
      </App>
    </Router>
  </BrowserRouter>
</RouterContainer>
`;
